upstream api {
    server api:8000;
}

server {
    listen 80;
    server_name $APP_URL www.$APP_URL;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot;
    }

    location / {
        # The following part that is shown by comment,
        # Must be commented out, when the first time,
        # You are going to create ssl for a domain.
        # Also the return part (redirect to ssl) and
        # all other parts related to ssl (the following)
        # server section must be commented the first time.

        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
        
        # return 301 https://$host$request_uri;
    }
}

# server {
#     listen 443 ssl;
#     server_name www.$APP_URL;
#     ssl_certificate /etc/letsencrypt/live/$APP_URL/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/$APP_URL/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#     return 301 https://$APP_URL$request_uri;
# }

# server {
#     listen 443 ssl;
#     server_name $APP_URL;
#     ssl_certificate /etc/letsencrypt/live/$APP_URL/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/$APP_URL/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#     client_max_body_size 25M;

#     location / {
#         root /usr/share/nginx/html;
#         index index.html index.htm;
#         try_files $uri $uri/ /index.html;
#     }

#     location /static {
#         alias /vol/static;
#     }

#     location /api {
#         rewrite /api/(.*) /$1 break;
#         uwsgi_pass api;
#         include /etc/nginx/uwsgi_params;
#     }

#     location /admin {
#         uwsgi_pass api;
#         include /etc/nginx/uwsgi_params;
#     }

# }